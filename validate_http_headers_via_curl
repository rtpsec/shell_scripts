###################################################################################################
# Checking VIPs and local webhost for "HTTP/1.1 302 Found"
####################################################################################################

fun_curl_webpages_for_response_codes(){

mw_pgp_a0_eth1="192.168.1.1"
mw_pgp_b0_eth1="192.168.1.2"
wc_pgp_a0_eth1="192.168.1.3"
wc_pgp_b0_eth1="192.168.1.4"

                if [[ $(hostname) == *"<SNIP DMZ>"* ]]; then
                        local_eth1="$mw_pgp_a0_eth1"
                        fun_grab_https_localhost "$local_eth1"
                fi

                if [[ $(hostname) == *"<SNIP DMZ>"* ]]; then
                        local_eth1="$mw_pgp_b0_eth1"
                        fun_grab_https_localhost "$local_eth1"
                fi

                if [[ $(hostname) == *"<SNIP DMZ>"* ]]; then
                        local_eth1="$wc_pgp_a0_eth1"
                        fun_grab_https_localhost "$local_eth1"
                fi

                if [[ $(hostname) == *"<SNIP DMZ>"* ]]; then
                        local_eth1="$wc_pgp_b0_eth1"
                        fun_grab_https_localhost "$local_eth1"
                fi


                # Skip if it's a LAN server, contains <SNIP>

                if [[ $(hostname) == *"<SNIP LAN>"* ]]; then
                        echo "This server is local, skipping"

                fi

                if [[ $(hostname) == *"<SNIP LAN>"* ]]; then
                        echo "This server is local, skipping"

                fi



}


fun_grab_https_localhost() {

echo " "
echo "  ========================================================="

local_time_zone=$(date +%Z)
echo -n "       Downloading..."

get_page_status_localhost_302=$(curl https://$1 -k -insecure |head -n1)
get_page_status_localhost_200=$(curl https://$1/b/nsb.e -k -insecure |head -n1)


echo " "
echo -n "       [1/4] Checking local webserver for a 302 message: "
if [[ $get_page_status_localhost_302 != *"302 Found"* ]]; then
        echo $get_page_status_localhost_302
        echo "Email goes here"
        mail -s "$email_prefix $(hostname) - securemail local failed - / returning - $get_page_status_localhost_302" $email < /dev/null
else
        echo "OK"
fi

echo -n "       [2/4] Checking local webserver for a 200 message: "
if [[ $get_page_status_localhost_200 != *"200"* ]]; then
        echo $get_page_status_localhost_200
        echo "Email goes here"
        mail -s "$email_prefix $(hostname) - login page returning - $get_page_status_localhost_200" $email < /dev/null
else
        echo "OK"
fi



# Because of <SNIP>
if [ $local_time_zone == "CDT" ]; then

        # If we're in the central time zone, we pull the http headers from central load balancers
        get_page_status_ea_vip_securemail_302=$(curl -I https://<SNIP domain.com>/ -k -insecure |head -n1)
        get_page_status_ea_vip_securemail_200=$(curl -I https://<SNIP domain.com/b/nsb.e -k -insecure |head -n1)

        echo -n "       [3/4] Checking MW VIP / for redirect 302: "
        if [[ $get_page_status_mw_vip_<SNIP domain.com>_302 != *"302 Found"* ]]; then
                echo $get_page_status_ea_vip_<SNIP domain.com_302
                echo " "
                echo "Email goes here"
                mail -s "$email_prefix $(hostname) - midwest load balancer vip - returning $get_page_status_mw_vip_<SNIP domain.com>_302" $email < /dev/null
        else
                echo "OK"
        fi

        echo -n "       [4/4] Checking MW VIP for login page 200: "
        if [[ $get_page_status_mw_vip_<Snip domain.com>_200 != *"200"* ]]; then
                echo $get_page_status_mw_vip_<Snip domain.com>_200
                echo " "
                echo "Email goes here"
                mail -s "$email_prefix $(hostname) - mw load balancer vip login page - $get_page_status_mw_vip_<SNIP domain.com>_200" $email < /dev/null
        else
                echo "OK"
        fi



fi


# Because of <SNIP>
if [ $local_time_zone == "PDT" ]; then

        # the <SNIP> y on it
        get_page_status_wc_vip_domain_302=$(curl -I https://<SNIP domain>/b -k -insecure |head -n1)
        get_page_status_wc_vip_domain_200=$(curl -I https://<SNIP domain>/b/nsb.e -k -insecure |head -n1)

        echo -n "       [3/4] Checking WC VIP for / 302 redirect: "
        if [[ $get_page_status_wc_vip_<SNIP domain>_302 != *"302 Found"* ]]; then
                echo $get_page_status_wc_vip_<SNIP domain>_302
                echo " "
                echo "Email goes here"
                mail -s "$email_prefix $(hostname) - <SNIP> load balancer vip not presenting 302 redirect" $email < /dev/null
        else
                echo "OK"
        fi

        echo -n "       [4/4] Checking WC VIP for login page 200: "
        if [[ $get_page_status_wc_vip_<SNIP domain>_200 != *"200"* ]]; then
                echo $get_page_status_wc_vip_<SNIP domain>_200
                echo " "
                echo "Email goes here"
                mail -s "$email_prefix $(hostname) - <SNIP> - check login page" $email < /dev/null
        else
                echo "OK"
        fi


fi

echo "  ========================================================="


}

##########################################################################################################
